--BASIC SQL PRACTICE PROBLEMS
--all code generated on ModeSQL. 



select *
from tutorial.us_housing_units 
limit 15;

-- Test Select* from tutorial.us_housing_units limit 5;

--SQL WHERE
SELECT * FROM tutorial.us_housing_units 
where month=1;

--SQL Comparison Operators where west >50k in one month
SELECT *
FROM tutorial.us_housing_units 
where west > 50;

--SQL comparison operations where south produced 20 or less
SELECT *
FROM tutorial.us_housing_units 
where south <= 20;

--SQL using single quotes to reference column values
SELECT *
  FROM tutorial.us_housing_units
 WHERE month_name > 'January'
 
 --write a query that only shows rows for which the month name is feb
 select *
 from tutorial.us_housing_units 
 where month_name ilike 'February';
 
 --Write a query that only shows rows for which the month_name 
 --starts with the letter "N" or an earlier letter in the alphabet.

select *
FROM tutorial.us_housing_units 
where month_name <= 'N%';

--Write a query that calculates the sum of all four regions in a separate column.
select west,south,midwest,northeast,
west + south + midwest + northeast as regions_sum
from tutorial.us_housing_units;

--Write a query that returns all rows for which more units were
--produced in the West region than in the Midwest and Northeast combined.
SELECT *
FROM tutorial.us_housing_units 
Where west > (midwest + northeast);

--Write a query that calculates the percentage of all houses completed 
--in the United States represented by each region. 
--Only return results from the year 2000 and later.
SELECT year,
       month,
       west/(west + south + midwest + northeast)*100 AS west_pct,
       south/(west + south + midwest + northeast)*100 AS south_pct,
       midwest/(west + south + midwest + northeast)*100 AS midwest_pct,
       northeast/(west + south + midwest + northeast)*100 AS northeast_pct
  FROM tutorial.us_housing_units
 WHERE year >= 2000
 
 SELECT distinct artist
  FROM tutorial.billboard_top_100_year_end
where artist = '%Hammer%'
  limit 100;
  
  --Write a query that shows all of the rows for which song_name is null.
SELECT *
FROM tutorial.billboard_top_100_year_end
WHERE SONG_NAME IS NULL;

-- Write a query that surfaces all rows for top-10 hits for which Ludacris is part of the Group.
select *
from tutorial.billboard_top_100_year_end t
where year_rank <= 10 and t.group ilike '%Ludacris%'
limit 100;

-- Write a query that surfaces the top-ranked records in 1990, 2000, and 2010.
select *
from tutorial.billboard_top_100_year_end t
where year_rank =1 AND year in (1990,2000,2010);

-- Write a query that lists all songs from the 1960s with "love" in the title.
select *
FROM tutorial.billboard_top_100_year_end t
where song_name ilike('%love%') AND (year between 1960 and 1969);

--Write a query that returns all rows for top-10 songs that featured either Katy Perry or Bon Jovi.

select *
from tutorial.billboard_top_100_year_end t 
where year_rank <= 10 and (t.group ilike '%Katy Perry%' or t.group ILIKE '%Bon Jovi%');

--Write a query that returns all songs with titles that contain the word "California" in either the 1970s or 1990s.
select *
from tutorial.billboard_top_100_year_end t 
where song_name ilike '%california%' AND ((year between 1970 and 1979) OR (year between 1990 and 1999));

--Write a query that returns all rows for songs that were on the charts in 2013 and do not contain the letter "a".
select *
FROM tutorial.billboard_top_100_year_end t 
where year = 2013 and song_name not ilike '%a%';

--Write a query that returns all rows from 2012, ordered by song title from Z to A.
select *
from tutorial.billboard_top_100_year_end t 
where year = 2012 
order by song_name DESC
limit 100;

/*Write a query that shows all rows for which T-Pain was a group member, 
ordered by rank on the charts, 
from lowest to highest rank (from 100 to 1).*/
SELECT *
from tutorial.billboard_top_100_year_end t
where t.group ilike '%t-pain%'
order by year_rank;

--Write a query that returns songs that ranked between 10 and 20 (inclusive) in 1993, 2003, or 2013. 
--Order the results by year and rank, and leave a 
--comment on each line of the WHERE clause to indicate what that line does
select song_name      --pulls only song_names
from tutorial.billboard_top_100_year_end t      --pulls song names from this DB and renames it temporary t 
where (year_rank between 10 and 20) AND year in (1993,2003,2013)    ---finds where year_rank is between 10 and 20 AND year is 1993,2003,2013
order by year, year_rank;     --orders by year first, then year_Rank
